/* tslint:disable */
/* eslint-disable */
/**
 * Conduit API
 * Conduit API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Profile } from "./Profile";
import { ProfileFromJSON, ProfileToJSON } from "./Profile";

/**
 *
 * @export
 * @interface Comment
 */
export interface Comment {
  /**
   *
   * @type {number}
   * @memberof Comment
   */
  id: number;
  /**
   *
   * @type {Date}
   * @memberof Comment
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof Comment
   */
  updatedAt: Date;
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  body: string;
  /**
   *
   * @type {Profile}
   * @memberof Comment
   */
  author: Profile;
}

/**
 * Check if a given object implements the Comment interface.
 */
export function instanceOfComment(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "createdAt" in value;
  isInstance = isInstance && "updatedAt" in value;
  isInstance = isInstance && "body" in value;
  isInstance = isInstance && "author" in value;

  return isInstance;
}

export function CommentFromJSON(json: any): Comment {
  return CommentFromJSONTyped(json, false);
}

export function CommentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Comment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    body: json["body"],
    author: ProfileFromJSON(json["author"]),
  };
}

export function CommentToJSON(value?: Comment | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
    body: value.body,
    author: ProfileToJSON(value.author),
  };
}
