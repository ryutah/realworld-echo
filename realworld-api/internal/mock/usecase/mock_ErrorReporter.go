// Code generated by mockery v2.32.0. DO NOT EDIT.

package usecase

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	xerrorreport "github.com/ryutah/realworld-echo/realworld-api/pkg/xerrorreport"
)

// MockErrorReporter is an autogenerated mock type for the ErrorReporter type
type MockErrorReporter struct {
	mock.Mock
}

type MockErrorReporter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockErrorReporter) EXPECT() *MockErrorReporter_Expecter {
	return &MockErrorReporter_Expecter{mock: &_m.Mock}
}

// Report provides a mock function with given fields: ctx, err, errContext
func (_m *MockErrorReporter) Report(ctx context.Context, err error, errContext xerrorreport.ErrorContext) {
	_m.Called(ctx, err, errContext)
}

// MockErrorReporter_Report_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Report'
type MockErrorReporter_Report_Call struct {
	*mock.Call
}

// Report is a helper method to define mock.On call
//   - ctx context.Context
//   - err error
//   - errContext xerrorreport.ErrorContext
func (_e *MockErrorReporter_Expecter) Report(ctx interface{}, err interface{}, errContext interface{}) *MockErrorReporter_Report_Call {
	return &MockErrorReporter_Report_Call{Call: _e.mock.On("Report", ctx, err, errContext)}
}

func (_c *MockErrorReporter_Report_Call) Run(run func(ctx context.Context, err error, errContext xerrorreport.ErrorContext)) *MockErrorReporter_Report_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(error), args[2].(xerrorreport.ErrorContext))
	})
	return _c
}

func (_c *MockErrorReporter_Report_Call) Return() *MockErrorReporter_Report_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockErrorReporter_Report_Call) RunAndReturn(run func(context.Context, error, xerrorreport.ErrorContext)) *MockErrorReporter_Report_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockErrorReporter creates a new instance of MockErrorReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockErrorReporter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockErrorReporter {
	mock := &MockErrorReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
