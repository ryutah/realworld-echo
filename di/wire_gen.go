// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/ryutah/realworld-echo/api/rest"
	"github.com/ryutah/realworld-echo/internal/xtrace"
	"github.com/ryutah/realworld-echo/usecase"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

func InitializeRestExecuter(projectID string) *rest.Extcuter {
	errorOutputPort := rest.NewErrorOutputPort()
	getArticleOutputPort := rest.NewGetArticleOutputPort(errorOutputPort)
	article := usecase.NewArticle(getArticleOutputPort)
	artcle := rest.NewArticle(article)
	server := rest.NewServer(artcle)
	sampler := trace.NeverSample()
	initializer := xtrace.NewGoogleCloudTracingInitializer(projectID, sampler)
	extcuter := rest.NewExecuter(server, initializer)
	return extcuter
}

// wire.go:

var (
	localRestSet        = wire.NewSet(rest.NewServer, rest.NewArticle, localInputPortSet)
	localInputPortSet   = wire.NewSet(usecase.NewArticle, wire.Bind(new(usecase.GetArticleInputPort), new(*usecase.Article)), localOutputPortSet)
	localOutputPortSet  = wire.NewSet(rest.NewErrorOutputPort, rest.NewGetArticleOutputPort)
	traceInitializerSet = wire.NewSet(xtrace.NewGoogleCloudTracingInitializer, trace.NeverSample)
)
